******** Mappings from the previous reasoner ********

// If the computer has a connection, it can send or receive msg from other computer
library.put("sendMsgTo", "hasConnectionWith");
library.put("receiveMsgFrom", "hasConnectionWith");

// If user A knows B's key, then it can encrypt and decrypt msg
library.put("encryptMsgTo", "hasKeyOf");
library.put("decryptMsgFrom", "knowKeyOf");

// If the user/ computer has created the msg, it can forward the msg
library.put("forward", "hasCreated");


********************************************************************
******** New Mappings with iotDevice Ontology Integration **********
********************************************************************

// The iotDevice/computer is connected to the iotDevice/computer/server
library.put("sendData", "isConnectedTo");
library.put("receiveData", "isConnectedTo");

// The iotDevice/computer is connected to the iotDevice/computer/server
library.put("sendMessage", "isConnectedTo");
library.put("receiveMessage", "isConnectedTo");

// Hardware Components Mapping
library.put("", "hasButton");
library.put("recordImage", "hasCamera");
library.put("recordAudio", "hasMicrophone");
library.put("produceAudio", "hasSpeaker");
library.put("provideWirelessConnectivity", "hasNetworkModule");
library.put("", "hasMotionSensor");
library.put("", "hasThermalSensor");

// Software Feature Mapping
library.put("canEncryptData", "hasFeatureDataEncryption");
library.put("canDecryptData", "hasFeatureDataDecryption");
library.put("canEncryptEvent", "hasFeatureEventEncryption");
library.put("canBalanceLoad", "hasFeatureSecurity");

// Use cases (hybrid Action-Association Mapping)

// 1. Perform Motion Sensing
library.put("", "hasMotionSensor");
library.put("performMotionSensing", "hasFeatureMotionSensing");

// 2. Perform Thermal Image Recognition
library.put("", "hasThermalSensor");
library.put("peformThermalImageRecognition", "hasFeatureThermalSensing");

// 3. Does the doorbell perform streaming
library.put("recordImage", "hasCamera");
library.put("provideWirelessConnectivity", "hasNetworkModule");

// 4. Does the device provide Sound Recognition
library.put("produceAudio", "hasSpeaker");
library.put("recordAudio", "hasMicrophone");
library.put("provideWirelessConnectivity", "hasNetworkModule");

// 5. Does the device send and receive secure data?
library.put("sendData", "isConnectedTo");
library.put("receiveData", "isConnectedTo");
library.put("canEncryptData", "hasFeatureDataEncryption");
library.put("canDecryptData", "hasFeatureDataDecryption");

// 6. Is the connection between the server and device secure?
library.put("sendData", "isConnectedTo");
library.put("receiveData", "isConnectedTo");
library.put("canEncryptEvent", "hasFeatureEventEncryption");
